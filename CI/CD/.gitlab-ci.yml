stages:
  - data-validation # Linters on branch commit
  - ip-provisioning
  - ip-cleanup
  - identify-changes   # Provision IP requests and build manifest
  - build-params    # Build the merged parameters for downstream checks
  - trigger-downstream    # Triggers downstream CI's in resources repo
  - build
  - eunomia-project-check
  - eunomia-webhook
  - k8s_secrets

include:
  - local: .gitlab-ci-helpers.yml
  - project: 'codit/infra/platform_enablement/cloud-config/cloud-resources'
    ref: main
    file: '.gitlab-ci-pylint.yml'
  - project: 'codit/infra/platform_enablement/cloud-config/cloud-resources'
    ref: main
    file: '.gitlab-ci-shelllint.yml'
  - project: 'codit/infra/platform_enablement/cloud-config/cloud-resources'
    ref: main
    file: '.gitlab-ci-yamllint.yml'

IP-Provisioning:
  stage: ip-provisioning
  extends:
    - .internal
    - .bluecat_req
  image: registry.gitlab.com/codit/infra/platform_enablement/cloud-config/cloud-config-ci-image/main
  needs: []
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    changes:
      - project_vars/**/*.{yml,yaml}
    when: always
    allow_failure: true
  script:
    - gitlab_ipalloc $ip_alloc_debug provision

IP-Deprovisioning:
  stage: ip-cleanup
  needs: []
  extends:
    - .internal
    - .bluecat_req
  image: registry.gitlab.com/codit/infra/platform_enablement/cloud-config/cloud-config-ci-image/main
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'
    changes:
      - project_vars/**/*.{yml,yaml}
    when: always
    allow_failure: true
  script:
    - gitlab_ipalloc $ip_alloc_debug deprovision

Generate-Manifest:
  stage: identify-changes
  image: registry.gitlab.com/codit/infra/platform_enablement/cloud-config/cloud-config-ci-image/main
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - default_vars/*.{yml,yaml}
        - team_vars/**/*.{yml,yaml}
        - project_vars/**/*.{yml,yaml}
        - project_vars/**/hierarchy.lst
  script:
    - git fetch
    - git diff --name-only origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME... > ./temp
    - cat temp
    - sed 's:[^/]*$::' temp | { grep 'project_vars' || true; } | cut -d'/' -f2-2 | sort -u | sed '/^$/d' >> build_manifest.txt
    - cat build_manifest.txt
  artifacts:
    expire_in: 1 week
    paths:
    - build_manifest.txt

Build-Merged-Parameters:
  stage: build-params
  image: registry.gitlab.com/codit/infra/platform_enablement/cloud-config/cloud-config-ci-image/main
  needs: ['Generate-Manifest']
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - default_vars/*.{yml,yaml}
        - team_vars/**/*.{yml,yaml}
      when: always
      variables:
        PROCESS_ALL: '1'
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - project_vars/**/*.{yml,yaml}
        - project_vars/**/hierarchy.lst
      when: always
      variables:
        PROCESS_ALL: '0'
  variables:
    GOLANG_YQ_VERSION: "4.6.2"
    HIERARCHY_VERSION: "0.1.1"
  before_script:
    - mkdir processed_values
  script:
    - cat build_manifest.txt
    - >
      if [ $PROCESS_ALL == '1' ]; then
        find ./project_vars -mindepth 1 -maxdepth 1 -type d -printf '%f\n' > build_manifest.txt
      fi
    - cat build_manifest.txt
    - >
      while read proj; do
        echo $proj
        mkdir processed_values/$proj
        hierarchy -b "project_vars/${proj}/" -f "hierarchy.lst" -o "processed_values/${proj}/processed_values.yml"
      done <build_manifest.txt
  after_script:
    - export
    - echo "PARAMS_ARTIFACT=${CI_BUILD_ID}" >> params_artifacts.env
  artifacts:
    expire_in: 1 week
    paths:
    - processed_values/*
    reports:
      dotenv: params_artifacts.env

trigger_downstream_CI:
  stage: trigger-downstream
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - default_vars/*.{yml,yaml}
        - team_vars/**/*.{yml,yaml}
        - project_vars/**/*.{yml,yaml}
        - project_vars/**/hierarchy.lst
  needs: ['Build-Merged-Parameters']
  variables:
    UPSTREAM: "${CI_PROJECT_ID}"
    UPSTREAMJOBID: "${PARAMS_ARTIFACT}"
    MR_ID: "$CI_MERGE_REQUEST_IID"
    PROJECT_NAME: "${CI_PROJECT_NAME}"
  trigger:
    project: 'codit/infra/platform_enablement/cloud-config/cloud-resources'
    branch: main
    strategy: depend

eunomia_vars_check:
  needs: []
  stage: eunomia-project-check
  image: registry.gitlab.com/codit/infra/platform_enablement/cloud-config/eunomia-project-image/main:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - eunomia_vars/codit-cpe-kcc-prd-01/vars/projects.yml
  script:
    - python3 /app/project_check.py --eunomia_file=eunomia_vars/codit-cpe-kcc-prd-01/vars/projects.yml --project_dir=project_vars

eunomia_webhook:
  # Need to disable before_script from running
  before_script: []
  needs: []
  stage: eunomia-webhook
  image: registry.gitlab.com/codit/infra/platform_enablement/cloud-config/cloud-resources/main:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - default_vars/*.{yml,yaml}
        - team_vars/**/*.{yml,yaml}
        - project_vars/**/*.{yml,yaml}
        - project_vars/**/hierarchy.lst
      allow_failure: true
  extends:
    - .internal
  script:
    - python3 /app/scripts/eunomia_webhook.py --eunomia_url="$EUNOMIA_URL" --git_ref="$CI_COMMIT_REF_NAME" --git_repo="$CI_PROJECT_URL"
