I. Create a ConfigMap and a pod that references it:

#nano yourname-config.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: yourname-demo
data:
  game.properties: |
    enemy.types=aliens,monsters
    player.maximum-lives=5    
  user-interface.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true 

kubectl apply -f yourname-config.yaml
kubectl get configmap yourname-demo

#nano yourname-app.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  labels:
    app: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: mypod
        image: redis
        resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
        volumeMounts:
        - name: yournamefoo
          mountPath: "/etc/yournamefoo"
          readOnly: true
      volumes:
      - name: yournamefoo
        configMap:
          name: yourname-demo

kubectl apply -f yourname-app.yaml
kubectl get pods

II. SSH to your pod and verify the ConfigMap:

SSH to your pod
Nagivate the directories to /etc/yournamefoo file
Check the file game.properties. The player should have a max of 5 lives for the game.

kubectl exec -it <yourpod> -- /bin/bash
cd ..
ls
cat 
exit

III. Change your ConfigMap :

Edit your configMap for the player to have 2 lives instead of 5
Apply it again to the cluster
Delete your pod and wait for it to come back online

IV. Check your Pod:

SSH to your pod
Nagivate the directories to /etc/yournamefoo file
Check the file game.properties for your changes - The player should now have 2 lives instead of 5

kubectl exec -it <yourpod> -- /bin/bash
cd
ls
cat

VI. Create a Secret:

Create your secret
Create your secret.yaml file
Apply your file
Create your deployment pod
SSH into your pod and check your secrets

echo -n 'CoditIT' | base64

#nano secrets.yaml

apiVersion: v1
kind: Secret
metadata:
  name: temp-secret
type: Opaque
data:
  password.file: |
    Q29kaXRJVA== #<----- Insert your secret here

#nano doms-pod.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  labels:
    app: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myappcontainer
        image: nginx:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 1883
        volumeMounts:
          - name: myapp-secret
            mountPath: "etc/foo"
            readOnly: true
      volumes:
        - name: myapp-secret
          secret:
            secretName: temp-secret

kubectl exec -it <yourpod> -- /bin/bash
cd
ls
cat password.file
