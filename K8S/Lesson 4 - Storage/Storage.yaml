#I. Setup your node  - Done in Minikube()

Identify your node and SSH to it

    kubectl get node
    minikube ssh


Create a directory, 

    sudo mkdir /mnt/data
    sudo sh -c "echo 'Hello from Kubernetes storage' > /mnt/data/index.html"
    cat /mnt/data/index.html

su
    

#II. Create a Persistent Volume - Done on GCP VM(cloudshell)


nano yourname-pv.yaml

apiVersion: v1
kind: PersistentVolume
metadata:
  name: yourname-storage
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

kubectl apply -f yourname-pv.yaml
kubectl get pv yourname-storage


#III. Create a Persistent Volume Claim - Done on GCP VM(cloudshell)

nano yourname-pv-claim.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yourname-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Mi


cat yourname-pv-claim.yaml
kubectl apply -f yourname-pv-claim.yaml
kubectl get pvc yourname-pv-claim




#IV. Create a Pod and Attach the Claim - Done on GCP VM(cloudshell)


nano yourname-pod.yaml

apiVersion: v1
kind: Pod
metadata:
  name: keyuna-pv-pod
spec:
  volumes:
    - name: keyuna-storage
      persistentVolumeClaim:
        claimName: keyuna-pv-claim
  containers:
    - name: keyuna-pv-container
      image: nginx
      ports:
        - containerPort: 80
          name: "http-server"
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: keyuna-storage


cat yourname-pod.yaml
kubectl apply -f yourname-pod.yaml
kubectl get pod yourname-pv-pod


kubectl exec -it yourname-pv-pod -- /bin/bash #Need to SSH to Pod
apt update
apt install curl
curl http://localhost

'Hello from Kubernetes storage'

#V. Cleanup Need to be in GCP


kubectl delete pod yourname-pv-pod
kubectl delete pvc yourname-pv-claim
kubectl delete pv yourname-storage