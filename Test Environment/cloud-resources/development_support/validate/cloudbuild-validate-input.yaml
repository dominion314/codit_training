---
steps:

# Prepare python environment
- name: 'gcr.io/$PROJECT_ID/python-yq-cloudbuild'
  id: 'Prepare python virtual environment'
  entrypoint: '/bin/sh'
  args: ['-c', 'virtualenv /workspace/venv']
- name: 'gcr.io/$PROJECT_ID/python-yq-cloudbuild'
  id: 'Install python dependencies'
  entrypoint: 'venv/bin/pip'
  args: ['install', '-V', '-r', 'development_support/validate/requirements.txt']

# Prepare artificats folder
- name: 'gcr.io/$PROJECT_ID/python-yq-cloudbuild'
  id: 'Create artifacts folder'
  entrypoint: '/bin/mkdir'
  args: ['/workspace/artifacts']

# Execute main script
- name: 'gcr.io/$PROJECT_ID/python-yq-cloudbuild'
  id: 'xd input data'
  entrypoint: '/bin/ls'

# Execute main script
- name: 'gcr.io/$PROJECT_ID/python-yq-cloudbuild'
  id: 'Process input data'
  entrypoint: 'venv/bin/python'
  args: ['development_support/validate/run_validate_input.py', '--input_manifest=validation-manifest.yaml']

# Convert input yml into PDF
- name: 'gcr.io/$PROJECT_ID/graphviz-cloudbuild'
  id: 'Generate pdf for input.yml'
  entrypoint: 'sh'
  args: ['-x', '/usr/local/bin/yml2pdf.sh', 'artifacts/input.yml', 'artifacts/input.pdf']

# Prepare artifacts
artifacts:
   objects:
      location: 'gs://doms-iaas-lle-cloud-build-artifacts/test-buids/'
      paths: ['./artifacts/*']
