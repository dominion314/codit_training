---
iam:
  allowedRoles:
    nonprd:
      roles:
        # BigQuery Admin
      - bigquery.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Editor
      - bigquery.dataEditor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Owner
      - bigquery.dataOwner:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Transfer Service Agent
      - bigquerydatatransfer.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Viewer
      - bigquery.dataViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryJobUser
      - bigquery.jobUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryMetadataViewer
      - bigquery.metadataViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryReadSessionUser
      - bigquery.readSessionUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryUser
      - bigquery.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableAdministrator
      - bigtable.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableReader
      - bigtable.reader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableUser
      - bigtable.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableViewer
      - bigtable.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Browser
      - browser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilder
      - cloudbuild.builds.builder:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilderEditor
      - cloudbuild.builds.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilderViewer
      - cloudbuild.builds.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Cloud Dataflow Service Agent
      - dataflow.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreImportExportAdmin
      - datastore.importExportAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreIndexAdmin
      - datastore.indexAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreOwner
      - datastore.owner:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreUser
      - datastore.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreViewer
      - datastore.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsAdmin
      - cloudfunctions.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsDeveloper
      - cloudfunctions.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsServiceAgent
      - cloudfunctions.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsViewer
      - cloudfunctions.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisAdmin
      - redis.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisEditor
      - redis.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisServiceAgent
      - redis.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisViewer
      - redis.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMLServiceAgent
      - ml.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSchedulerAdmin
      - cloudscheduler.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSchedulerViewer
      - cloudscheduler.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSourceRepositoriesServiceAgent
      - sourcerepo.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerAdmin
      - spanner.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseAdmin
      - spanner.databaseAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseReader
      - spanner.databaseReader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseUser
      - spanner.databaseUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerViewer
      - spanner.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLAdmin
      - cloudsql.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLEditor
      - cloudsql.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLPrivateIP
      - cloudSql.privateIP:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLViewer
      - cloudSql.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceAdmin
      - cloudtrace.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceAgent
      - cloudtrace.agent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceUser
      - cloudtrace.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeAdmin
      - compute.admin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeImageUser
      - compute.imageUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeInstanceAdmin(v1)
      - compute.instanceAdmin.v1:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeInstanceAdmin(v1)
      - compute.instanceAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeLoadBalancerAdmin
      - compute.loadBalancerAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeNetworkUser
      - compute.networkUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeNetworkViewer
      - compute.networkViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeOSAdminLogin
      - compute.osAdminLogin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeOSLogin
      - compute.osLogin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeSecurityAdmin
      - compute.securityAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeStorageAdmin
      - compute.storageAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeViewer
      - compute.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowAdmin
      - dataflow.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowDeveloper
      - dataflow.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowViewer
      - dataflow.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowWorker
      - dataflow.worker:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprepServiceAgent
      - dataprep.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dataprep User
      - dataprep.projects.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocEditor
      - dataproc.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocServiceAgent
      - dataproc.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocViewer
      - dataproc.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocWorker
      - dataproc.worker:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Deployment Manager Editor
      - deploymentmanager.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerTypeEditor
      - deploymentmanager.typeEditor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerTypeViewer
      - deploymentmanager.typeViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerViewer
      - deploymentmanager.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Admin
      - dialogflow.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Client
      - dialogflow.client:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Reader
      - dialogflow.reader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingAdmin
      - errorreporting.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingUser
      - errorreporting.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingViewer
      - errorreporting.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorsWriter
      - errorreporting.writer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Admin
      - firebase.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Analytics Admin
      - firebase.analyticsAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Analytics Viewer
      - firebase.analyticsViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Crashlytics Admin
      - firebasecrashlytics.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Crashlytics Viewer
      - firebasecrashlytics.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Develop Admin
      - firebase.developAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Develop Viewer
      - firebase.developViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Grow Admin
      - firebase.growthAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Grow Viewer
      - firebase.growthViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Viewer
      - firebase.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineAdmin
      - container.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineClusterAdmin
      - container.clusterAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineClusterViewer
      - container.clusterViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineDeveloper
      - container.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineViewer
      - container.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LoggingAdmin
      - logging.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsConfigurationWriter
      - logging.configWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsViewer
      - logging.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsWriter
      - logging.logWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineAdmin
      - ml.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineDeveloper
      - ml.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineViewer
      - ml.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringAdmin
      - monitoring.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringEditor
      - monitoring.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringMetricWriter
      - monitoring.metricWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringViewer
      - monitoring.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # PrivateLogsViewer
      - logging.privateLogViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubAdmin
      - pubsub.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubEditor
      - pubsub.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubPublisher
      - pubsub.publisher:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubSubscriber
      - pubsub.subscriber:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubViewer
      - pubsub.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Quota Administrator
      - servicemanagement.quotaAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # QuotaViewer
      - servicemanagement.quotaViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Service Account KeyAdmin
      - iam.serviceAccountKeyAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ServiceAccountTokenCreator
      - iam.serviceAccountTokenCreator:
          allowedForGroups: true
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ServiceAccountUser
      - iam.serviceAccountUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageAdmin
      - storage.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageObjectAdmin
      - storage.objectAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageObjectCreator
      - storage.objectCreator:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageObjectViewer
      - storage.objectViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageTransferAdmin
      - storagetransfer.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageTransferViewer
      - storagetransfer.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # AppengineAppViewer
      - appengine.appViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ServicemanagementServiceConsumer
      - servicemanagement.serviceConsumer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
    prd:
      roles:
        # BigQuery Admin
      - bigquery.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Editor
      - bigquery.dataEditor:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Owner
      - bigquery.dataOwner:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Transfer Service Agent
      - bigquerydatatransfer.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Viewer
      - bigquery.dataViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryJobUser
      - bigquery.jobUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryMetadataViewer
      - bigquery.metadataViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryReadSessionUser
      - bigquery.readSessionUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryUser
      - bigquery.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableAdministrator
      - bigtable.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableReader
      - bigtable.reader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableUser
      - bigtable.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableViewer
      - bigtable.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Browser
      - browser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilder
      - cloudbuild.builds.builder:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilderEditor
      - cloudbuild.builds.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilderViewer
      - cloudbuild.builds.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Cloud Dataflow Service Agent
      - dataflow.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreImportExportAdmin
      - datastore.importExportAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreIndexAdmin
      - datastore.indexAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreOwner
      - datastore.owner:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreUser
      - datastore.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreViewer
      - datastore.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsAdmin
      - cloudfunctions.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsDeveloper
      - cloudfunctions.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsServiceAgent
      - cloudfunctions.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsViewer
      - cloudfunctions.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisAdmin
      - redis.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisEditor
      - redis.editor:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisServiceAgent
      - redis.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisViewer
      - redis.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMLServiceAgent
      - ml.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSchedulerAdmin
      - cloudscheduler.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSchedulerViewer
      - cloudscheduler.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSourceRepositoriesServiceAgent
      - sourcerepo.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerAdmin
      - spanner.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseAdmin
      - spanner.databaseAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseReader
      - spanner.databaseReader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseUser
      - spanner.databaseUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerViewer
      - spanner.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLAdmin
      - cloudsql.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLEditor
      - cloudsql.editor:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLPrivateIP
      - cloudSql.privateIP:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLViewer
      - cloudSql.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceAdmin
      - cloudtrace.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceAgent
      - cloudtrace.agent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceUser
      - cloudtrace.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeAdmin
      - compute.admin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeImageUser
      - compute.imageUser:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeInstanceAdmin(v1)
      - compute.instanceAdmin.v1:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeLoadBalancerAdmin
      - compute.loadBalancerAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeNetworkUser
      - compute.networkUser:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeNetworkViewer
      - compute.networkViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeOSAdminLogin
      - compute.osAdminLogin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeOSLogin
      - compute.osLogin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeSecurityAdmin
      - compute.securityAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeStorageAdmin
      - compute.storageAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeViewer
      - compute.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowAdmin
      - dataflow.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowDeveloper
      - dataflow.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowViewer
      - dataflow.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowWorker
      - dataflow.worker:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprepServiceAgent
      - dataprep.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dataprep User
      - dataprep.projects.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocEditor
      - dataproc.editor:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocServiceAgent
      - dataproc.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocViewer
      - dataproc.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocWorker
      - dataproc.worker:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Deployment Manager Editor
      - deploymentmanager.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerTypeEditor
      - deploymentmanager.typeEditor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerTypeViewer
      - deploymentmanager.typeViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerViewer
      - deploymentmanager.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Admin
      - dialogflow.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Client
      - dialogflow.client:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Reader
      - dialogflow.reader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingAdmin
      - errorreporting.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingUser
      - errorreporting.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingViewer
      - errorreporting.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorsWriter
      - errorreporting.writer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Admin
      - firebase.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Analytics Admin
      - firebase.analyticsAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Analytics Viewer
      - firebase.analyticsViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Crashlytics Admin
      - firebasecrashlytics.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Crashlytics Viewer
      - firebasecrashlytics.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Develop Admin
      - firebase.developAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Develop Viewer
      - firebase.developViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Grow Admin
      - firebase.growthAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Grow Viewer
      - firebase.growthViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Viewer
      - firebase.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineAdmin
      - container.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineClusterAdmin
      - container.clusterAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineClusterViewer
      - container.clusterViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineDeveloper
      - container.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineViewer
      - container.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LoggingAdmin
      - logging.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsConfigurationWriter
      - logging.configWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsViewer
      - logging.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsWriter
      - logging.logWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineAdmin
      - ml.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineDeveloper
      - ml.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineViewer
      - ml.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringAdmin
      - monitoring.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringEditor
      - monitoring.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringMetricWriter
      - monitoring.metricWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringViewer
      - monitoring.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # PrivateLogsViewer
      - logging.privateLogViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubAdmin
      - pubsub.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubEditor
      - pubsub.editor:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubPublisher
      - pubsub.publisher:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubSubscriber
      - pubsub.subscriber:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubViewer
      - pubsub.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Quota Administrator
      - servicemanagement.quotaAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # QuotaViewer
      - servicemanagement.quotaViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Service Account KeyAdmin
      - iam.serviceAccountKeyAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ServiceAccountTokenCreator
      - iam.serviceAccountTokenCreator:
          allowedForGroups: true
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ServiceAccountUser
      - iam.serviceAccountUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageAdmin
      - storage.admin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageObjectAdmin
      - storage.objectAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageObjectCreator
      - storage.objectCreator:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageObjectViewer
      - storage.objectViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageTransferAdmin
      - storagetransfer.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageTransferViewer
      - storagetransfer.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Viewer
      - viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # AppengineAppViewer
      - appengine.appViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ServicemanagementServiceConsumer
      - servicemanagement.serviceConsumer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
    sbx:
      roles:
        # BigQuery Admin
      - bigquery.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Editor
      - bigquery.dataEditor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Owner
      - bigquery.dataOwner:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Transfer Service Agent
      - bigquerydatatransfer.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQuery Data Viewer
      - bigquery.dataViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryJobUser
      - bigquery.jobUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryMetadataViewer
      - bigquery.metadataViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryReadSessionUser
      - bigquery.readSessionUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigQueryUser
      - bigquery.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableAdministrator
      - bigtable.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableReader
      - bigtable.reader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableUser
      - bigtable.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # BigtableViewer
      - bigtable.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Browser
      - browser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilder
      - cloudbuild.builds.builder:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilderEditor
      - cloudbuild.builds.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudContainerBuilderViewer
      - cloudbuild.builds.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Cloud Dataflow Service Agent
      - dataflow.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreImportExportAdmin
      - datastore.importExportAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreIndexAdmin
      - datastore.indexAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreOwner
      - datastore.owner:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreUser
      - datastore.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudDatastoreViewer
      - datastore.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsAdmin
      - cloudfunctions.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsDeveloper
      - cloudfunctions.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsServiceAgent
      - cloudfunctions.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudFunctionsViewer
      - cloudfunctions.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisAdmin
      - redis.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisEditor
      - redis.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisServiceAgent
      - redis.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMemorystoreRedisViewer
      - redis.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudMLServiceAgent
      - ml.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSchedulerAdmin
      - cloudscheduler.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSchedulerViewer
      - cloudscheduler.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSourceRepositoriesServiceAgent
      - sourcerepo.serviceAgent:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # CloudSpannerAdmin
      - spanner.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseAdmin
      - spanner.databaseAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseReader
      - spanner.databaseReader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerDatabaseUser
      - spanner.databaseUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSpannerViewer
      - spanner.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLAdmin
      - cloudsql.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLEditor
      - cloudsql.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLPrivateIP
      - cloudSql.privateIP:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudSQLViewer
      - cloudSql.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceAdmin
      - cloudtrace.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceAgent
      - cloudtrace.agent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # CloudTraceUser
      - cloudtrace.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeAdmin
      - compute.admin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeImageUser
      - compute.imageUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # ComputeInstanceAdmin(v1)
      - compute.instanceAdmin.v1:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # ComputeInstanceAdmin(v1)
      - compute.instanceAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeLoadBalancerAdmin
      - compute.loadBalancerAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # ComputeNetworkUser
      - compute.networkUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # ComputeNetworkViewer
      - compute.networkViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeOSAdminLogin
      - compute.osAdminLogin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeOSLogin
      - compute.osLogin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeSecurityAdmin
      - compute.securityAdmin:
          allowedForGroups: false
          allowedForServiceAccounts: false
          allowedForUsers: false
        # ComputeStorageAdmin
      - compute.storageAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ComputeViewer
      - compute.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowAdmin
      - dataflow.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowDeveloper
      - dataflow.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowViewer
      - dataflow.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataflowWorker
      - dataflow.worker:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprepServiceAgent
      - dataprep.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dataprep User
      - dataprep.projects.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocEditor
      - dataproc.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocServiceAgent
      - dataproc.serviceAgent:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocViewer
      - dataproc.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DataprocWorker
      - dataproc.worker:
          allowedForGroups: false
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Deployment Manager Editor
      - deploymentmanager.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerTypeEditor
      - deploymentmanager.typeEditor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerTypeViewer
      - deploymentmanager.typeViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # DeploymentManagerViewer
      - deploymentmanager.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Admin
      - dialogflow.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Client
      - dialogflow.client:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Dialogflow API Reader
      - dialogflow.reader:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingAdmin
      - errorreporting.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingUser
      - errorreporting.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorReportingViewer
      - errorreporting.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ErrorsWriter
      - errorreporting.writer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Admin
      - firebase.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Analytics Admin
      - firebase.analyticsAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Analytics Viewer
      - firebase.analyticsViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Crashlytics Admin
      - firebasecrashlytics.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Crashlytics Viewer
      - firebasecrashlytics.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Develop Admin
      - firebase.developAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Develop Viewer
      - firebase.developViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Grow Admin
      - firebase.growthAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Grow Viewer
      - firebase.growthViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Firebase Viewer
      - firebase.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineAdmin
      - container.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineClusterAdmin
      - container.clusterAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # KubernetesEngineClusterViewer
      - container.clusterViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # KubernetesEngineDeveloper
      - container.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # KubernetesEngineViewer
      - container.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LoggingAdmin
      - logging.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsConfigurationWriter
      - logging.configWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsViewer
      - logging.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # LogsWriter
      - logging.logWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineAdmin
      - ml.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineDeveloper
      - ml.developer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MLEngineViewer
      - ml.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringAdmin
      - monitoring.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringEditor
      - monitoring.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringMetricWriter
      - monitoring.metricWriter:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # MonitoringViewer
      - monitoring.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # PrivateLogsViewer
      - logging.privateLogViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubAdmin
      - pubsub.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubEditor
      - pubsub.editor:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubPublisher
      - pubsub.publisher:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubSubscriber
      - pubsub.subscriber:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Pub/SubViewer
      - pubsub.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Quota Administrator
      - servicemanagement.quotaAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # QuotaViewer
      - servicemanagement.quotaViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # Service Account Admin
      - iam.serviceAccountAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # Service Account KeyAdmin
      - iam.serviceAccountKeyAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # ServiceAccountTokenCreator
      - iam.serviceAccountTokenCreator:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # ServiceAccountUser
      - iam.serviceAccountUser:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # StorageAdmin
      - storage.admin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # StorageObjectAdmin
      - storage.objectAdmin:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # StorageObjectCreator
      - storage.objectCreator:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: true
        # StorageObjectViewer
      - storage.objectViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageTransferAdmin
      - storagetransfer.user:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # StorageTransferViewer
      - storagetransfer.viewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # AppengineAppViewer
      - appengine.appViewer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
        # ServicemanagementServiceConsumer
      - servicemanagement.serviceConsumer:
          allowedForGroups: true
          allowedForServiceAccounts: true
          allowedForUsers: false
