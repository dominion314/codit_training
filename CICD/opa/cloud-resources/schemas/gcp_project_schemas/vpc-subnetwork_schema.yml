---
# VPC Top Level
vpcs:
  required: false
  type: 'dict'
  keysrules:
    type: 'string'
    regex: '^[a-z][a-z0-9]+-(nx|xpn)-(lle|hle|prd|ops|sbx|transit)$'
  valuesrules:
    type: 'dict'
    schema:
      # Subnet Key
      subnets:
        type: 'dict'
        nullable: true
        keysrules:
          type: 'string'
          regex: '^[a-z][a-z0-9]+-(nx|xpn)-(lle|hle|prd|ops|sbx|transit)-([a-z]+-)?[a-z0-9-]{0,35}((c|e)\d-)?(pub|sec|gke|prv)[0-9]{2}$'
        valuesrules:
          type: 'dict'
          schema:
            # Subnet Definitions
            advertiseRoutes:
              type: boolean
              required: true
            natRouter:
              type: string
              required: false
              nullable: true
            region:
              type: string
              required: true
              # future: Add regex for all regions
              allowed: ['us-central1', 'us-east1']
            network:
              type: 'dict'
              required: true
              schema:
                # Subnetwork IP Definitions
                ip:
                  required: true
                  type: string
                  regex: '^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))$'
                bluecat-id:
                  required: false
                  type: integer
                status:
                  required: false
                  type: string
            # Secondary subnetwork
            secondary:
              type: 'dict'
              required: false
              keysrules:
                # future: add regex for secondary names
                type: 'string'
              valuesrules:
                type: 'dict'
                schema:
                  # Subnetwork IP Definitions
                  ip:
                    required: true
                    type: string
                    regex: '^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))$'
                  bluecat-id:
                    required: false
                    type: integer
                  status:
                    # future: add regex for status
                    required: false
                    type: string
            # GKE subnetwork
            gke:
              type: 'list'
              schema:
                type: 'dict'
                schema:
                  podNetwork:
                    type: 'dict'
                    required: true
                    schema:
                      name:
                        required: true
                        type: string
                        # future: add regex for name
                      ip:
                        required: true
                        type: string
                        regex: '^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))$'
                      bluecat-id:
                        required: false
                        type: integer
                      status:
                        # future: add regex for status
                        required: false
                        type: string
                  serviceNetwork:
                    type: 'dict'
                    required: true
                    schema:
                      name:
                        required: true
                        type: string
                        # future: add regex for name
                      ip:
                        required: true
                        type: string
                        regex: '^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))$'
                      bluecat-id:
                        required: false
                        type: integer
                      status:
                        # future: add regex for status
                        required: false
                        type: string
                  masterNetwork:
                    type: 'dict'
                    required: true
                    schema:
                      ip:
                        required: true
                        type: string
                        regex: '^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))$'
                      bluecat-id:
                        required: false
                        type: integer
                      status:
                        # future: add regex for status
                        required: false
                        type: string
