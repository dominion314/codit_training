---
# VPC Top Level
vpcs:
  required: false
  type: 'dict'
  keysrules:
    type: 'string'
    regex: '^[a-z][a-z0-9]+-(nx|xpn)-(lle|hle|prd|ops|sbx|transit)$'
  valuesrules:
    type: 'dict'
    schema:
      # Router Key
      routerDef:
        type: 'dict'
        nullable: true
        required: false
        keysrules:
          type: 'string'
          regex: '^[a-z][a-z0-9]+-(nx|xpn)-(lle|hle|prd|ops|sbx|transit)-((c|e)\d)-gcp-rtr[0-9]{2}$'
        valuesrules:
          type: 'dict'
          schema:
            # Router Level Definitions
            region:
              type: string
              required: true
              # future: Add regex for all regions
              allowed: ['us-central1', 'us-east1']
            description:
              type: string
              required: false
              nullable: true
            routerASN:
              type: integer
              required: false
              nullable: true
            advertiseMode:
              type: 'string'
              required: true
              allowed: ['DEFAULT', 'CUSTOM']
            custom_advertised_ip_ranges:
              type: 'dict'
              schema:
                includeSubnetDef:
                  type: boolean
                  required: true
                customIPList:
                  type: list
                  nullable: true
                  schema:
                    type: string
                    regex: '^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))$'
            cloudNat:
              type: dict
              required: false
              nullable: true
              schema:
                name:
                  type: string
                  required: true
                  regex: '^[a-z][a-z0-9]+-(nx|xpn)-(lle|hle|prd|ops|sbx|transit)-([a-z0-9-]{0,10})?((c|e)\d)-nat-gateway$'
                logConfig:
                  type: dict
                  required: true
                  nullable: true
                  schema:
                    enable:
                      type: boolean
                      required: true
                    filter:
                      nullable: true
                manualAddresses:
                  type: integer
                  required: false
                  empty: false
            outbound_nat_gateway:
              type: dict
              required: false
              nullable: true
              schema:
                name:
                  type: string
                  required: true
                  regex: '^[a-z][a-z0-9]+-(nx|xpn)-(lle|hle|prd|ops|sbx|transit)-([a-z0-9-]{0,10})?((c|e)\d)-nat-gateway$'
                logConfig:
                  type: dict
                  required: true
                  nullable: true
                  schema:
                    enable:
                      type: boolean
                      required: true
                    filter:
                      nullable: true
                manualAddresses:
                  type: integer
                  required: false
                  empty: false
            ha_vpn_gateways_to_transit:
              type: dict
              required: false
              keysrules:
                type: string
                regex: '^[a-z][a-z0-9]+-(nx|xpn)-(lle|hle|prd|ops|sbx|transit)-((c|e)\d)-totransit(-\d\d)?$'
              valuesrules:
                type: dict
                schema:
                  description:
                    type: string
                    required: false
                    nullable: true
                  if0_peer_cidr:
                    type: dict
                    required: true
                    schema:
                      cidr:
                        type: string
                        required: true
                        regex: '(169\.254\.)((([0-9](?!\d)|[1-9][0-9](?!\d)|1[0-9]{2}|2[0-4][0-9]|25[0-4])[.])(([0-9](?!\d)|[1-9][0-9](?!\d)|1[0-9]{2}|2[0-4][0-9]|25[0-5])))/30$'
                      status:
                        type: string
                        required: false
                        # Future: regex for status
                      bluecat-id:
                        type: integer
                        required: false
                  if1_peer_cidr:
                    type: dict
                    required: true
                    schema:
                      cidr:
                        type: string
                        required: true
                        regex: '(169\.254\.)((([0-9](?!\d)|[1-9][0-9](?!\d)|1[0-9]{2}|2[0-4][0-9]|25[0-4])[.])(([0-9](?!\d)|[1-9][0-9](?!\d)|1[0-9]{2}|2[0-4][0-9]|25[0-5])))/30$'
                      status:
                        type: string
                        required: false
                        # Future: regex for status
                      bluecat-id:
                        type: integer
                        required: false
